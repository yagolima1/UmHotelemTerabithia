let usuario = prompt(" üõéÔ∏è Sauda√ß√µes, digite seu nome: ").toUpperCase(); // Solicita o nome do usu√°rio

let ListaDeHospedes = []; // Inicializa a lista de h√≥spedes

let Quartos = [ // Cria um array com os quartos e seus estados (livre ou ocupado)
    ['quarto1', 'livre'],
    ['quarto2', 'livre'],
    ['quarto3', 'livre'],
    ['quarto4', 'livre'],
    ['quarto5', 'livre'],
    ['quarto6', 'livre'],
    ['quarto7', 'livre'],
    ['quarto8', 'livre'],
    ['quarto9', 'livre'],
    ['quarto10', 'livre'],
    ['quarto11', 'livre'],
    ['quarto12', 'livre'],
    ['quarto13', 'livre'],
    ['quarto14', 'livre'],
    ['quarto15', 'livre'],
    ['quarto16', 'livre'],
    ['quarto17', 'livre'],
    ['quarto18', 'livre'],
    ['quarto19', 'livre'],
    ['quarto20', 'livre'],

];  // ... at√© 'quarto20'

// Fun√ß√£o para realizar o login
function login (){

    let senha = parseInt(prompt(" üõéÔ∏è Por gentileza, digite sua senha: ")); // Solicita a senha

    if (senha === 2678){ // Verifica se a senha est√° correta

        sauda√ßao(); // Chama a fun√ß√£o de sauda√ß√£o

    } 
    
    else {
        alert("Senha Inv√°lida! Tente novamente."); // Mensagem de erro

        login(); // Rechama a fun√ß√£o para tentar novamente
    }
}

// Fun√ß√£o para dar as boas-vindas ao usu√°rio
function sauda√ßao (){

    alert("Ol√° " + usuario + "! √â um imenso prazer ter voc√™ por aqui, seja bem vindo(a) ao Yana Bliss! üè®‚úàÔ∏è ");

    HOME(); // Chama a fun√ß√£o HOME
}

// Fun√ß√£o principal que apresenta as op√ß√µes ao usu√°rio
function HOME() {

    var op√ßoes = parseInt(prompt('Por gentileza, selecione uma op√ß√£o: 1)  Reserva de Quartos | 2)  Cadastro de H√≥spedes | 3)  Eventos | 4)  Abastecimento de Carros | 5)  Manuten√ß√£o | 6)  Sair'));
    
    switch (op√ßoes){ // Verifica a op√ß√£o escolhida

        case 1:
            reserva_quartos(); // Chama a fun√ß√£o de reserva de quartos
            break;

        case 2:
            cadastro_hospedes(); // Chama a fun√ß√£o de cadastro de h√≥spedes
            break;

        case 3:
            eventos();  // Chama a fun√ß√£o de eventos
            break;

        case 4:
            abastecer_carros();  // Chama a fun√ß√£o de abastecimento de carros
            break;

        case 5:
            manuten√ßao();  // Chama a fun√ß√£o de manuten√ß√£o
            break;  

        case 6:
            SAIR(); // Chama a fun√ß√£o para sair
            break;

        default:
            ERRO(); // Chama a fun√ß√£o de erro
    }
}		

// Fun√ß√£o para reservar quartos
function reserva_quartos() {

    alert('HOTEL Yana Bliss - RESERVA DE QUARTOS');
    
    let Diaria = parseFloat(prompt("Qual o valor padr√£o da Di√°ria ?")); // Solicita o valor da di√°ria
    let Dias = parseInt(prompt("Quantas di√°rias ser√£o necess√°rias ?")); // Solicita a quantidade de di√°rias

    // Valida√ß√£o dos dados
    if (Diaria < 0 || Dias > 30 || Dias < 1 ||  isNaN(Diaria) || isNaN(Dias)) {

        alert("Dados Inv√°lidos");

        reserva_quartos(); // Rechama a fun√ß√£o em caso de dados inv√°lidos
    }    

    var calculoDiaria = Diaria * Dias; // Calcula o valor total da hospedagem

    var exibi√ßaoCalculo = alert("O valor de " + Dias +  " dias de hospedagem √© de: R$ " + calculoDiaria + "."); // Exibe o c√°lculo

    let Hosp = prompt("Por gentileza, qual o nome do H√≥spede ?"); // Solicita o nome do h√≥spede
    
    let EscolhaQuartos = parseInt(prompt("Insira o N¬∞ do Quarto (1-20)")) - 1; // Solicita o n√∫mero do quarto

    // Verifica se o quarto escolhido √© v√°lido
    if (EscolhaQuartos < 0 || EscolhaQuartos >= 20) {

        alert("Por gentileza, Sr(a) " + usuario + ". Verifique os dados, este quarto n√£o existe!");

        reserva_quartos(); // Rechama a fun√ß√£o em caso de quarto inv√°lido
    }

    // Verifica se o quarto est√° ocupado
    if (Quartos[EscolhaQuartos][1] === "ocupado") {

        alert("D√° n√£o men, escolhe outro a√≠ pai");

        EscolhaQuartos = parseInt(prompt("Insira o N¬∞ do Quarto (1-20)")) - 1; // Solicita novo quarto
    } 
    
    else {

        Quartos[EscolhaQuartos][1] = "ocupado"; // Marca o quarto como ocupado

        alert("Quarto Livre !");
    }

    let Confirma√ßao = prompt("Sr(a) " + usuario +  ". Deseja confirmar a hospedagem para " + Hosp + ", por " + Dias + " dias para o quarto N¬∞ " + (EscolhaQuartos + 1) + " por: R$" + calculoDiaria + " ? (S/N)");

    if (Confirma√ßao.toUpperCase() === "S") {
        
        alert("Sr(a) " + usuario + ", a reserva para " + Hosp + " foi efetuada com sucesso!"); // Confirma a reserva

        alert(Quartos.join("  |  ")); // Exibe a lista de quartos

        HOME(); // Retorna ao menu principal

    } 
    
    else {

        HOME(); // Retorna ao menu principal se a reserva n√£o for confirmada
    }
}

// Fun√ß√£o para cadastrar h√≥spedes
function cadastro_hospedes() {

    alert("HOTEL Yana Bliss - CADASTRO DE H√ìSPEDES");
  
    var op√ßoesCadastro = parseInt(prompt('Selecione uma op√ß√£o: 1) Cadastrar | 2) Pesquisar | 3) Listar | 4) Sair')); // Apresenta op√ß√µes de cadastro

    switch (op√ßoesCadastro){

        case 1:
            cadastrar(); // Chama a fun√ß√£o de cadastrar
            break;

        case 2:
            pesquisa_de_hospedes(); // Chama a fun√ß√£o de pesquisa
            break;

        case 3:
            listar_hospedes(); // Chama a fun√ß√£o de listar h√≥spedes
            break;

        case 4:
            Sair2(); // Chama a fun√ß√£o para sair
            break;

        default:
            Erro2(); // Chama a fun√ß√£o de erro
    }

    // Fun√ß√£o para cadastrar h√≥spedes
    function cadastrar (){

        var DiariaPadrao = parseFloat(prompt("Qual o valor padr√£o da di√°ria ?")); // Solicita o valor padr√£o da di√°ria
  
        if (DiariaPadrao < 0 || isNaN(DiariaPadrao)) { // Valida o valor da di√°ria

            alert("Dado Inv√°lido! Insira um valor v√°lido.");

            cadastro_hospedes(); // Rechama a fun√ß√£o em caso de dado inv√°lido
        }
  
        var totalHospedagem = 0; // Inicializa o total da hospedagem
        var gratuidade = 0; // Contador para gratuidade
        var meia = 0; // Contador para meia

        while (true) { // Loop para cadastro de h√≥spedes

            var nome_hospede = prompt("Qual o nome do H√≥spede ?"); // Solicita o nome do h√≥spede

            if (nome_hospede.toUpperCase()  === "PARE") { // Verifica se o usu√°rio quer parar

                alert("Cadastro Finalizado!"); // Mensagem de finaliza√ß√£o

                break; // Sai do loop

            }

            var idade_hospede = prompt("Qual a idade do H√≥spede ?"); // Solicita a idade do h√≥spede

            // Classifica o h√≥spede de acordo com a idade
            if (idade_hospede <= 6) {

                ListaDeHospedes.push({"Hospede" : `${nome_hospede}`, "Idade" : `${idade_hospede}`, "Tipo_Pagamento" : "Gratuito", "Valor_a_ser_pago": (DiariaPadrao - DiariaPadrao) });

            } 
            
            else if (idade_hospede >= 60) {

                ListaDeHospedes.push({"Hospede" : `${nome_hospede}`, "Idade" : `${idade_hospede}`, "Tipo_Pagamento" : "Meia", "Valor_a_ser_pago": (DiariaPadrao / 2).toFixed(2) });

            } 
            
            else {

                ListaDeHospedes.push({"Hospede" : `${nome_hospede}`, "Idade" : `${idade_hospede}`, "Tipo_Pagamento" : "Inteira", "Valor_a_ser_pago": (DiariaPadrao - 0) });
            }
  
            // Valida a idade do h√≥spede
            if (idade_hospede < 0 || isNaN(idade_hospede)) {

                alert("Idade inv√°lida! Insira uma idade v√°lida.");

                continue; // Continua o loop para tentar novamente
            }

            // Atualiza contadores de gratuidade e meia
            if (idade_hospede <= 6) {

                gratuidade++;

                alert(nome_hospede +  " cadastrada(o) com sucesso." + nome_hospede +  " possui gratuidade.");

            } 
            
            else if (idade_hospede >= 60) {

                meia++;
                totalHospedagem +=  DiariaPadrao / 2;

                alert(nome_hospede +  " cadastrada(o) com sucesso." + nome_hospede +  " paga meia.");

            } 
            
            else {

                totalHospedagem += DiariaPadrao;

                alert(nome_hospede +  " cadastrada(o) com sucesso.");
            }

            // Exibe o valor total das hospedagens
            alert("Sr(a) " + usuario + ", o valor total das hospedagens √©: " + totalHospedagem.toFixed(2) + " ;" + gratuidade + " gratuidade(s); " + meia + " meia(s)");  
        }
    }
  
    // Fun√ß√£o para pesquisar h√≥spedes
    function pesquisa_de_hospedes (){

        nome_hospede = prompt("Qual o nome do H√≥spede que deseja pesquisar ?"); // Solicita o nome do h√≥spede

        let hospedeEncontrado = ListaDeHospedes.find(hospede => hospede.nome.toLowerCase() === nome_hospede.toLowerCase()); // Busca o h√≥spede na lista

        if (hospedeEncontrado){ 
            // Se encontrado
            alert(`H√≥spede ${hospedeEncontrado.nome} foi encontrado(a)!`); // Mensagem de sucesso

        } 
        
        else {

            alert("H√≥spede n√£o encontrado(a)!"); // Mensagem de erro

        }
    }

    // Fun√ß√£o para listar h√≥spedes
    function listar_hospedes (){

        if (ListaDeHospedes.length === 0) { // Verifica se a lista est√° vazia

            alert("Nenhum h√≥spede cadastrado!"); // Mensagem de alerta

        } 
        
        else {

            alert(ListaDeHospedes.join("  |  ")); // Exibe a lista de h√≥spedes

        }
    }

    function Sair2 (){

        HOME(); // Retorna ao menu principal
    }
}

// Fun√ß√£o para abastecer carros
function abastecer_carros() {

    alert('HOTEL Yana Bliss - ABASTECER');

    var tanque = 42; // Capacidade do tanque

    // Solicita os valores dos combust√≠veis em dois postos
    var AlcoolWayne = parseFloat(prompt("Qual o valor do √°lcool no posto Wayne Oil ?"));
    var GasolinaWayne = parseFloat(prompt("Qual o valor da gasolina no posto Wayne Oil ?"));
    var AlcoolStark = parseFloat(prompt("Qual o valor do √°lcool no posto Stark Petrol ?"));
    var GasolinaStark = parseFloat(prompt("Qual o valor da gasolina no posto Stark Petrol ?"));

    // Fun√ß√£o para calcular se √© vantajoso abastecer com √°lcool
    function PorcentagemAlcool (valorAlcool, valorGasolina) {
        return valorAlcool <= (valorGasolina * 0.7); // Retorna verdadeiro se √°lcool for mais vantajoso
    }

    // Calcula o custo para abastecer os tanques
    var AbastecerAlcoolWayne = AlcoolWayne * tanque;
    var AbastecerGasolinaWayne = GasolinaWayne * tanque;
    var AbastecerAlcoolStark = AlcoolStark * tanque;
    var AbastecerGasolinaStark = GasolinaStark * tanque;

    // Verifica a melhor op√ß√£o de abastecimento
    var WayneBeneficio = PorcentagemAlcool(AlcoolWayne, GasolinaWayne) ? "alcool" : "gasolina";
    var StarkBeneficio = PorcentagemAlcool(AlcoolStark, GasolinaStark) ? "alcool" : "gasolina";

    // Compara os pre√ßos e informa o melhor abastecimento
    if (WayneBeneficio === "alcool" && StarkBeneficio === "alcool") {

        if (AbastecerAlcoolWayne < AbastecerAlcoolStark) {

            alert("√â mais barato abastecer com √°lcool no posto Wayne Oil.");

        } 
        
        else {

            alert("√â mais barato abastecer com √°lcool no posto Stark Petrol.");

        }

    } 
    
    else if (WayneBeneficio === "gasolina" && StarkBeneficio === "gasolina") {

        if (AbastecerGasolinaWayne < AbastecerGasolinaStark) {

            alert("√â mais barato abastecer com gasolina no posto Wayne Oil.");

        } 
        
        else {

            alert("√â mais barato abastecer com gasolina no posto Stark Petrol.");

        }

    } 
    
    else {

        if (AbastecerAlcoolWayne < AbastecerGasolinaWayne && AbastecerAlcoolWayne < AbastecerAlcoolStark && AbastecerAlcoolWayne < AbastecerGasolinaStark) {

            alert("√â mais barato abastecer com √°lcool no posto Wayne Oil.");

        } 
        
        else if (AbastecerGasolinaWayne < AbastecerAlcoolWayne && AbastecerGasolinaWayne < AbastecerAlcoolStark && AbastecerGasolinaWayne < AbastecerGasolinaStark) {

            alert("√â mais barato abastecer com gasolina no posto Wayne Oil.");

        } 
        
        else if (AbastecerAlcoolStark < AbastecerGasolinaStark) {

            alert("√â mais barato abastecer com √°lcool no posto Stark Petrol.");

        } 
        
        else {

            alert("√â mais barato abastecer com gasolina no posto Stark Petrol.");

        }
    }

    HOME(); // Retorna ao menu principal
}

function eventos() {
    alert('HOTEL Yana Bliss - EVENTOS'); // Exibe uma mensagem informando que √© a se√ß√£o de eventos

    var auditorio_escolhido = ""; // Inicializa a vari√°vel para armazenar o audit√≥rio escolhido

    // Define a capacidade dos audit√≥rios
    var auditorio_laranja = 150; // Capacidade do Audit√≥rio Laranja
    var auditorio_colorado = 350; // Capacidade do Audit√≥rio Colorado

    // Solicita o n√∫mero de convidados para o evento
    var convidados = parseInt(prompt("Informe o n√∫mero de convidados para o Evento: "));

    // Valida o n√∫mero de convidados
    if (convidados > 350 || convidados <= 0 || isNaN(convidados)) {

        alert("N√∫mero de convidados inv√°lido! Tente novamente."); // Mensagem de erro para n√∫mero inv√°lido
        eventos(); // Rechama a fun√ß√£o para tentar novamente
    } 
    // Verifica se o n√∫mero de convidados cabe no Audit√≥rio Laranja
    else if (convidados > auditorio_laranja && convidados <= 220) {

        var calculo_audiLaranja = convidados - auditorio_laranja; // Calcula quantas cadeiras a mais s√£o necess√°rias

        auditorio_escolhido = "Audit√≥rio Laranja"; // Define o audit√≥rio escolhido

        alert("Use o Audit√≥rio Laranja (inclua mais " + calculo_audiLaranja + " cadeira(s) )"); // Informa sobre a necessidade de mais cadeiras
        alert("Agora vamos ver a agenda do evento."); // Informa que a agenda ser√° verificada
    } 
    // Se o n√∫mero de convidados cabe no Audit√≥rio Laranja
    else if (convidados <= auditorio_laranja) {

        auditorio_escolhido = "Audit√≥rio Laranja"; // Define o audit√≥rio escolhido

        alert("Use o Audit√≥rio Laranja."); // Informa que o audit√≥rio Laranja √© o escolhido

        alert("Agora vamos ver a agenda do evento."); // Informa que a agenda ser√° verificada
    } 
    // Verifica se o n√∫mero de convidados cabe no Audit√≥rio Colorado
    else if (convidados > 220 && convidados <= auditorio_colorado) {

        auditorio_escolhido = "Audit√≥rio Colorado"; // Define o audit√≥rio escolhido

        alert("Use o Audit√≥rio Colorado"); // Informa que o audit√≥rio Colorado √© o escolhido

        alert("Agora vamos ver a agenda do evento."); // Informa que a agenda ser√° verificada
    }

    alert('HOTEL Yana Bliss - AGENDA DE EVENTOS'); // Informa que agora ser√° definida a agenda do evento

    // Solicita informa√ß√µes sobre o evento
    var dia_do_evento = prompt("Qual ser√° o dia do seu evento ?").toLowerCase(); // Dia do evento

    var hora_do_evento = parseInt(prompt("Qual ser√° a hora do seu evento ?")); // Hora do evento

    var empresa_evento = prompt("Qual a empresa que est√° organizando o evento ?").toUpperCase(); // Nome da empresa organizadora

    var auditorio = false; // Inicializa a vari√°vel de controle para a disponibilidade do audit√≥rio

    // Verifica se o dia e hora do evento s√£o v√°lidos
    if (["segunda", "ter√ßa", "terca", "quarta", "quinta", "sexta"].includes(dia_do_evento) && hora_do_evento >= 7 && hora_do_evento <= 23) {

        auditorio = true; // Define que o audit√≥rio est√° dispon√≠vel
    }

    else if (["sabado", "domingo"].includes(dia_do_evento) && hora_do_evento >= 7 && hora_do_evento <= 15) {

        auditorio = true; // Define que o audit√≥rio est√° dispon√≠vel para fins de semana
    }

    // Verifica se o audit√≥rio foi reservado com sucesso
    if (auditorio) {

        alert("Audit√≥rio reservado para: " + empresa_evento + ". " + dia_do_evento + " √†s " + hora_do_evento + " horas"); // Confirma a reserva do audit√≥rio

    } 
    
    else {

        alert("Audit√≥rio Indispon√≠vel!"); // Mensagem de erro se o audit√≥rio n√£o est√° dispon√≠vel

    }

    // Solicita a dura√ß√£o do evento em horas
    var duracao_do_evento = parseInt(prompt("Qual a dura√ß√£o do evento em horas ?"));

    // Calcula o n√∫mero de gar√ßons necess√°rios
    var calculo_gar√ßom1 = Math.ceil(convidados / 12); // Um gar√ßom para cada 12 convidados
    var calculo_gar√ßom2 = Math.ceil(duracao_do_evento / 2); // Um gar√ßom para cada 2 horas de evento

    var total_de_gar√ßons = (calculo_gar√ßom1 + calculo_gar√ßom2); // Total de gar√ßons necess√°rios

    var tarifa_gar√ßom = 10.50; // Tarifa por gar√ßom
    var pre√ßo_total_gar√ßons = (total_de_gar√ßons * duracao_do_evento * tarifa_gar√ßom); // Custo total dos gar√ßons

    alert("Ser√£o necess√°rios " + total_de_gar√ßons + " gar√ßons para o evento."); // Informa a quantidade de gar√ßons
    alert("O custo ser√° de: R$" + pre√ßo_total_gar√ßons.toFixed(2)); // Informa o custo total dos gar√ßons

    alert("Agora vamos calcular o custo do buffet do hotel para o evento."); // Informa que o custo do buffet ser√° calculado

    alert('HOTEL Yana Bliss - BUFFET DO EVENTO'); // Informa que agora ser√° tratado o buffet do evento

    // Calcula a quantidade de insumos necess√°rios para o buffet
    var Lcafe = (convidados * 0.2); // Litros de caf√©
    var Lagua = (convidados * 0.5); // Litros de √°gua
    var Usalgados = (convidados * 7); // Unidades de salgados

    // Calcula o custo de cada insumo
    var custo_cafe = (Lcafe * 0.80); // Custo do caf√©
    var custo_agua = (Lagua * 0.40); // Custo da √°gua
    var custo_salgado = Math.ceil(Usalgados / 100) * 34; // Custo dos salgados

    var total_buffet = (custo_cafe + custo_agua + custo_salgado); // Custo total do buffet
    total_buffet = total_buffet.toFixed(2); // Formata o total do buffet para duas casas decimais

    var total_evento = (parseFloat(pre√ßo_total_gar√ßons) + parseFloat(total_buffet).toFixed(2)); // Custo total do evento

    // Informa a quantidade de insumos necess√°rios para o buffet
    alert("O evento precisar√° de: " + Lcafe + " litros de caf√©, " + Lagua + " litros de √°gua e " + Usalgados + " unidades de salgados.");

    // Exibe um resumo dos detalhes do evento
    alert("\nEvento no " + auditorio_escolhido + 
          "\nNome da Empresa: " + empresa_evento + 
          "\nDia do Evento: " + dia_do_evento + 
          "\nHora do Evento: " + hora_do_evento + 
          "\nDura√ß√£o do Evento: " + duracao_do_evento + 
          "\nTotal de Convidados: " + convidados + 
          "\nTotal de Gar√ßons: " + total_de_gar√ßons + 
          "\nPre√ßo Total dos Gar√ßons: R$" + pre√ßo_total_gar√ßons.toFixed(2) + 
          "\nCusto do Buffet: R$" + total_buffet + 
          "\nTotal do Evento: R$" + total_evento); // Exibe um resumo do custo total do evento

    // Solicita a confirma√ß√£o da reserva
    var confirmacao = prompt("Gostaria de efetuar a reserva ? S/N").toUpperCase();

    // Verifica a resposta do usu√°rio
    if (confirmacao === 'S') {
        console.log("Reserva efetuada com sucesso."); // Confirma a reserva
    } else {
        console.log("Reserva n√£o efetuada."); // Informa que a reserva n√£o foi realizada
        HOME(); // Retorna ao menu principal
    }
}

// Fun√ß√£o para manuten√ß√£o
function manuten√ßao (){

    var ValorMinimo = null; // Inicializa o valor m√≠nimo

    var EmpresaMaisBarata = ""; // Inicializa o nome da empresa mais barata

    var continuar = "S"; // Controle para continuar o loop

    while (continuar.toUpperCase() === "S") {

        var nome_da_empresa = prompt("Qual o nome da empresa ?"); // Solicita o nome da empresa

        var valor_do_aparelho = parseFloat(prompt("Qual o valor por aparelho ?")); // Solicita o valor por aparelho

        var quantidade_de_aparelhos = parseInt(prompt("Qual a quantidade de aparelhos ?")); // Solicita a quantidade de aparelhos

        var desconto = parseFloat(prompt("Qual a porcentagem do desconto ?")); // Solicita a porcentagem de desconto

        var quantidade_minima = parseInt(prompt("Qual a quantidade m√≠nima para conseguir o desconto ?")); // Solicita a quantidade m√≠nima para o desconto


        var valorTotal = valor_do_aparelho * quantidade_de_aparelhos; // Calcula o valor total

        // Calcula o valor da manuten√ß√£o considerando o desconto
        var valor_da_manuten√ßao;

        if (quantidade_de_aparelhos >= quantidade_minima) {

            var valorDesconto = (valorTotal * desconto) / 100;

            valor_da_manuten√ßao = valorTotal - valorDesconto;

        } 
        
        else {

            valor_da_manuten√ßao = valorTotal;

        }

        alert("O servi√ßo da " + nome_da_empresa + " custar√° R$ " + valor_da_manuten√ßao.toFixed(2)); // Exibe o valor da manuten√ß√£o

        // Verifica se √© o menor or√ßamento
        if (ValorMinimo === null || valor_da_manuten√ßao < ValorMinimo) {

            ValorMinimo = valor_da_manuten√ßao;

            EmpresaMaisBarata = nome_da_empresa;
        }

        continuar = prompt("Deseja informar novos dados? (S/N)"); // Pergunta se o usu√°rio quer continuar
    }

    alert("O or√ßamento de menor valor √© o de " + EmpresaMaisBarata + " por R$ " + ValorMinimo.toFixed(2)); // Exibe a empresa mais barata
}

// Fun√ß√£o para tratar erros
function ERRO() {

    alert('Por favor, informe um n√∫mero entre 1 e 6'); // Mensagem de erro

    HOME(); // Retorna ao menu principal
}

// Fun√ß√£o para tratar erros no cadastro
function Erro2() {

    alert('Por favor, informe um n√∫mero entre 1 e 4'); // Mensagem de erro

    cadastro_hospedes(); // Retorna √† fun√ß√£o de cadastro
}

// Fun√ß√£o para sair do sistema
function SAIR() {

    var confirma = confirm('Voc√™ deseja sair?'); // Pergunta ao usu√°rio se deseja sair

    if (confirma) {

        window.close(); // Fecha a janela se o usu√°rio confirmar

    } 
    
    else {

        HOME(); // Retorna ao menu principal

    }
}

// Inicia o processo chamando a fun√ß√£o de login

login();
